# 2a: Small and Large Worlds

-   The **small world** is the self-contained logical world of the
    model.
-   The **large world** is the broader context in which one deploys a
    model.

**Meta Remark (Study Guide)**

> This chapter focuses on the small world. It explains probability
> theory in its essential form: counting the ways things can happen.
> Bayesian inference arises automatically from this perspective. Then
> the chapter presents the stylized components of a Bayesian statistical
> model, a model for learning from data. Then it shows you how to
> animate the model, to produce estimates.
>
> All this work provides a foundation for the next chapter, in which
> you'll learn to summarize Bayesian estimates, as well as begin to
> consider large world obligations.

## 2.1a The Garden of Forking Data

::: callout-important
Bayesian inference is really just counting and comparing of
possibilities. ... In order to make good inference about what actually
happened, it helps to consider everything that could have happened. A
Bayesian analysis is a garden of forking data, in which alternative
sequences of events are cultivated. As we learn about what did happen,
some of these alternative sequences are pruned. In the end, what remains
is only what is logically consistent with our knowledge.
:::

### 2.1.1a Counting possibilites

> Suppose there's a bag, and it contains four marbles. These marbles
> come in two colors: blue and white. We know there are four marbles in
> the bag, but we don't know how many are of each color. We do know that
> there are five possibilities: (1) \[⚪⚪⚪⚪\], (2) \[⚫⚪⚪⚪\], (3)
> \[⚫⚫⚪⚪\], (4) \[⚫⚫⚫⚪\], (5) \[⚫⚫⚫⚫\]. These are the only
> possibilities consistent with what we know about the contents of the
> bag. **Call these five possibilities the *conjectures*.**
>
> Our goal is to figure out which of these conjectures is most
> plausible, given some evidence about the contents of the bag. We do
> have some evidence: A sequence of three marbles is pulled from the
> bag, one at a time, replacing the marble each time and shaking the bag
> before drawing another marble. **The sequence that emerges is: ⚫⚪⚫,
> in that order. These are the data.** (bold emphasis pb)
>
> So now let's plant the garden and see how to use the data to infer
> what's in the bag. Let's begin by considering just the single
> conjecture, \[⚫⚪⚪⚪\], that the bag contains one blue and three
> white marbles. ...
>
> ...
>
> Notice that even though the three white marbles look the same from a
> data perspective---we just record the color of the marbles, after
> all---they are really different events. This is important, because it
> means that there are three more ways to see ⚪ than to see ⚫.

|              |                        |
|--------------|------------------------|
| Conjecture   | Ways to produce ⚫⚪⚫ |
| \[⚪⚪⚪⚪\] | 0 × 4 × 0 = 0          |
| \[⚫⚪⚪⚪\] | 1 × 3 × 1 = 3          |
| \[⚫⚫⚪⚪\] | 2 × 2 × 2 = 8          |
| \[⚫⚫⚫⚪\] | 3 × 1 × 3 = 9          |
| \[⚫⚫⚫⚫\] | 4 × 0 × 4 = 0          |

> Notice that the number of ways to produce the data, for each
> conjecture, can be computed by first counting the number of paths in
> each "ring" of the garden and then by multiplying these counts
> together. ... The fact that numbers are multiplied during calculation
> doesn't change the fact that this is still just counting of logically
> possible paths. This point will come up again, when you meet a formal
> representation of Bayesian inference.

### 2.1.2a Combining Other Information

> We may have additional information about the relative plausibility of
> each conjecture. This information could arise from knowledge of how
> the contents of the bag were generated. It could also arise from
> previous data. Whatever the source, it would help to have a way to
> combine different sources of information to update the plausibilities.
> Luckily there is a natural solution: Just multiply the counts.
>
> To grasp this solution, suppose we're willing to say each conjecture
> is equally plausible at the start. So we just compare the counts of
> ways in which each conjecture is compatible with the observed data.
> This comparison suggests that \[⚫⚫⚫⚪\] is slightly more plausible
> than \[⚫⚫⚪⚪\], and both are about three times more plausible than
> \[⚫⚪⚪⚪\]. **Since these are our initial counts, and we are going
> to update them next, let's label them *prior*.** (bold emphasis are
> mine)

Here's how to do it. First we count the numbers of ways each conjecture
could produce the new observation, ⚫. Then we multiply each of these
new counts by the prior numbers of ways for each conjecture. In table
form:

|     |              |     |                    |     |              |     |            |     |
|--------|--------|--------|--------|--------|--------|--------|--------|--------|
|     |              |     |                    |     |              |     |            |     |
|     | Conjecture   |     | Ways to produce ⚫ |     | Prior counts |     | New count  |     |
|     | \[⚪⚪⚪⚪\] |     | 0                  |     | 0            |     | 0 × 0 = 0  |     |
|     | \[⚫⚪⚪⚪\] |     | 1                  |     | 3            |     | 3 × 1 = 3  |     |
|     | \[⚫⚫⚪⚪\] |     | 2                  |     | 8            |     | 8 × 2 = 16 |     |
|     | \[⚫⚫⚫⚪\] |     | 3                  |     | 9            |     | 9 × 3 = 27 |     |
|     | \[⚫⚫⚫⚫\] |     | 4                  |     | 0            |     | 0 × 4 = 0  |     |

In the book the table header "Ways to produce" includes ⚪ instead of
--- as I think is correct --- ⚫.

**Principle of Indifference**

::: callout-tip
## Principle of Indifference

Before seeing any data the most common solution is to assign an equal
number of ways that each conjecture could be correct.
:::

> Which assumption should we use, when there is no previous information
> about the conjectures? The most common solution is to assign an equal
> number of ways that each conjecture could be correct, before seeing
> any data. This is sometimes known as the **PRINCIPLE OF
> INDIFFERENCE**: When there is no reason to say that one conjecture is
> more plausible than another, weigh all of the conjectures equally. ...
>
> For the sort of problems we examine in this book, the principle of
> indifference results in inferences very comparable to mainstream
> non-Bayesian approaches, most of which contain implicit equal
> weighting of possibilities. For example a typical non-Bayesian
> confidence interval weighs equally all of the possible values a
> parameter could take, regardless of how implausible some of them are.
> In addition, many non-Bayesian procedures have moved away from equal
> weighting, through the use of penalized likelihood and other methods.

### 2.1.3a From Counts to Probability

::: callout-tip
## Principle of honest ignorance

*When we don't know what caused the data, potential causes that may
produce the data in more ways are more plausible*.
:::

Two reasons for using probabilities instead of counts:

1.  Only relative value matters.
2.  Counts will very fast grow very large and difficult to manipulate.

![](img/plausability-formula-1-min.png){fig-align="center"}

**Standardizing the plausability**

![](img/plausability-formula-2-min.png){fig-align="center"}

```{r}
#| label: compute-plausabilities-a1

## R code 2.1
ways <- c(0, 3, 8, 9, 0)
ways / sum(ways)
```

**Names of the different parts of the formula**

Data = ⚫⚪⚫.

-   A conjectured proportion of blue marbles, *p*, is usually called a
    **PARAMETER** value. It's just a way of indexing possible
    explanations of the data. For instance one conjectured proportion of
    one blue marble could be: ⚫⚪⚪⚪ (`p = 1`). The others are:
    ⚪⚪⚪⚪ (`p = 0`), ⚫⚫⚪⚪ (`p = 2` , ⚫⚫⚫⚪ (`p = 3`), and
    ⚫⚫⚫⚫ (`p = 4` ways).
-   The relative number of ways that a value *p* can produce the data is
    usually called a **LIKELIHOOD**. It is derived by enumerating all
    the possible data sequences that could have happened and then
    eliminating those sequences inconsistent with the data. For
    instance: `0.00, 0.15, 0.40, 0.45, 0.00`
-   The prior plausibility of any specific *p* is usually called the
    **PRIOR PROBABILITY**. For instance: `0, 3, 8, 9, 0`
-   The new, updated plausibility of any specific *p* is usually called
    the **POSTERIOR PROBABILITY**. For instance: `0, 3, 16, 27, 0`

## 2.2a Building a Model

**Globe tossing**

Data: `W L W W W L W L W` (W indicates water and L indicates land. )

1.  **Data story**: Motivate the model by narrating how the data might
    arise.
2.  **Update**: Educate your model by feeding it the data.
3.  **Evaluate**: All statistical models require supervision, leading to
    model revision.

### 2.2.1a A Data Story

> Bayesian data analysis usually means producing a story for how the
> data came to be. This story may be *descriptive*, specifying
> associations that can be used to predict outcomes, given observations.
> Or it may be *causal*, a theory of how some events produce other
> events.

All data stories have to be complete in the sense that they are
sufficient for specifying an algorithm for simulating new data.

> You can motivate your data story by trying to explain how each piece
> of data is born. This usually means describing aspects of the
> underlying reality as well as the sampling process. The data story in
> this case is simply a restatement of the sampling process:
>
> 1.  The true proportion of water covering the globe is *`p`*.
> 2.  A single toss of the globe has a probability *`p`* of producing a
>     water (W) observation. It has a probability `1 – p` of producing a
>     land (L) observation.
> 3.  Each toss of the globe is independent of the others.

### 2.2.2a Bayesian Updating

> A Bayesian model begins with one set of plausibilities assigned to
> each of these possibilities. These are the prior plausibilities. Then
> it updates them in light of the data, to produce the posterior
> plausibilities. This updating process is a kind of learning, called
> **BAYESIAN UPDATING**.
>
> ...
>
> For the sake of the example only, let's program our Bayesian machine
> to initially assign the same plausibility to every proportion of
> water, every value of *p*. We'll do better than this later.
>
> ...
>
> Every time a "W" is seen, the peak of the plausibility curve moves to
> the right, towards larger values of *p*. Every time an "L" is seen, it
> moves the other direction. The maximum height of the curve increases
> with each sample, meaning that fewer values of *p* amass more
> plausibility as the amount of evidence increases. As each new
> observation is added, the curve is updated consistent with all
> previous observations.

Figure 2.5 (How a Bayesian model learns) of the book is reproduced in my
notes of the brms-version.

## 2.2.3a Evaluate

Keep in mind two cautious principles:

1.  First, **the model\'s certainty is no guarantee that the model is a
    good one**. ... \[M\]odels of all sorts---Bayesian or not---can be
    very confident about an inference, even when the model is seriously
    misleading. This is because the inferences are conditional on the
    model. What your model is telling you is that, given a commitment to
    this particular model, it can be very sure that the plausible values
    are in a narrow range. Under a different model, things might look
    differently.
2.  Second, **it is important to supervise and critique your model\'s
    work**. ... When something is irrelevant to the machine, it won\'t
    affect the inference directly. But it may affect it indirectly ...
    So it is important to check the model\'s inferences in light of
    aspects of the data it does not know about. Such checks are an
    inherently creative enterprise, left to the analyst and the
    scientific community. Golems are very bad at it. (emphasis are mine)

Further keep in mind that

> the goal is not to test the truth value of the model\'s assumptions.
> We know the model\'s assumptions are never exactly right, in the sense
> of matching the true data generating process. ... Moreover, models do
> not need to be exactly true in order to produce highly precise and
> useful inferences.
>
> Instead, the objective is to check the model\'s adequacy for some
> purpose. This usually means asking and answering additional questions,
> beyond those that originally constructed the model. Both the questions
> and answers will depend upon the scientific context. So it\'s hard to
> provide general advice.

## 2.3a Components of the Model

We observed three components of the model:

1.  a **likelihood function**: \"the number of ways each conjecture
    could produce an observation,\"

2.  one or more **parameters**: \"the accumulated number of ways each
    conjecture could produce the entire data,\" and

3.  **a prior**: \"the initial plausibility of each conjectured cause of
    the data\"

### 2.3.1a List the Variables

> Variables are just symbols that can take on different values. In a
> scientific context, variables include things we wish to infer, such as
> proportions and rates, as well as things we might observe, the
> data....
>
> Unobserved variables are usually called **parameters**. (emphasis in
> the original)

Take as example the globe tossing models: There are three variables: `W`
and `L` (water or land) and the proportion of water and land `p`. We
observe the events of water or land but we calculate (do not observe
directly) the proportion of water and land. So `p` is a parameter as
defined above.

### 2.3.2a Define the Variables

> In defining each \[variable\], we build a model that relates the
> variables to one another. Remember, the goal is to count all the ways
> the data could arise, given the assumptions.

#### 2.3.2.1a Observed Variables

For each unobserved variable (parameter) we need to define the relative
number of ways---the probability---that the values of each observed
variable could arise. And then for each unobserved variable, we need to
define the prior plausibility of each value it could take.

For the count of water *W* and land *L* in the globe tossing model, we
**define how plausible any combination of *W* and *L* would be, for a
specific value of *p*.** (emphasis is mine)

This idea is implemented in the functions of `expand()`, `expand_grid()`
and `crossing()` of the {**tidyr**} package: They generate all
combinations of variables found as is demonstrated in the section
[Bayesian Updating of the
brms-variant](02b-small-and-large-worlds.html#sec-expand_grid).

Instead of counting we can also use a mathemtical function to calculate
the probability of all combinations. A distribution function assigned to
an observed variable is usually called a **LIKELIHOOD**.

In the case of the globe-tossing model the appropriate distributional
function is the **binomial distribution**. (Does this means that I have
to know more on probability theory to decide when to choose which
distribution?)

##### 2.3.2.1.1a Likelihood for p= 0.5

The likelihood in the globe-tossing example (9 trials, 6 with `W` and 3
with `L`) is easily computed:

```{r}
#| label: likelihood-1

## R code 2.2
dbinom(6, size = 9, prob = 0.5)
```

In this example it is assumed that the probability of `W` and `L` are
equal distributed. We calculated how plausible the combination of *6W*
and *3L* would be, for the specific value of *p = 0.5*. The result is
with 16% a pretty low probability.

##### 2.3.2.1.2a Likelihood for many p-values

To get a better idea what the best estimation of the probability is, we
could vary systematically the `p` value and look for the maximum.

A demonstration how this is done can be seen in the brms-variant
reproduced in my notes
[here](02b-small-and-large-worlds.html#sec-likelihood-for-many-p-values-b).
It shows a maximum at about *p = 0.7*.

#### 2.3.2.2a Unobserved Variables

Even variables (= parameters) are not observed we need to define them.
In the globe-tossing model there is only one parameter (p), but most
models have more than one unobserved variables.

> In statistical modeling, many of the most common questions we ask
> about data are answered directly by parameters:
>
> -   What is the average difference between treatment groups?
> -   How strong is the association between a treatment and an outcome?
> -   Does the effect of the treatment depend upon a covariate?
> -   How much variation is there among groups?
>
> \[We will\] see how these questions become extra parameters inside the
> distribution function we assign to the data.

::: callout-important
## Parameter & Prior

For every parameter we must provide a distribution of prior
plausibility, its Prior. This is also true when the number of trials is
null (N = 0), e.g. even in the initial state of information we need a
prior.
:::

When you have a previous estimate, that can become the prior. As a
result, each estimate (posterior probility) becomes then the prior for
the next step. Where do priors come from? They are both engineering
assumptions, chosen to help the machine learn, and scientific
assumptions, chosen to reflect what we know about a phenomenon. Because
the prior is an assumption, it should be interrogated like other
assumptions: by altering it and checking how sensitive inference is to
the assumption.

::: callout-note
## Data or Parameters

Data are measured and known; parameters are unknown and must be
estimated from data. But there is a deep identity between certainty
(data) and uncertainty (parameters): Sometimes we observe a variable
(data), sometimes not (parameter) but it could be that the same
distribution function applies. An exploitation of the identity between
data & parameters is it to incorporate measurement error and missing
data into your modeling.

::: callout-tip
For more in this topic, check out McElreath\'s lecture, [*Understanding
Bayesian statistics without frequentist
language*](https://youtu.be/yakg94HyWdE).
:::
:::

### 2.3.3a A Model is Born

> The observed variables *W* and *L* are given relative counts through
> the binomial distribution.

$$W∼Binomial(n,p)\space where\space N = W + L$$

The above is just a convention for communicating the assumption that the
relative counts of ways to realize *W* in *N* trials with probability
*p* on each trial comes from the binomial distribution.

Our binomial likelihood contains a parameter for an unobserved variable,
*p*. Parameters in Bayesian models are assigned priors:

$$p∼Uniform(0,1)$$

which expresses the model assumption that the entire range of possible
values for p are equally plausible.
