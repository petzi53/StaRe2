{
  "hash": "67b3724ef7e45458cf6645ef316d952b",
  "result": {
    "markdown": "# Sampling the Imaginary {#sec-chap03}\n\n## Practice\n\n### Easy\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-exercise-data-3.27}\n: Posterior distribution for the globe tossing example exercises\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.panel-tabset}\n\n###### Original\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## R code 3.27a for exercises  #######################\n\np_grid_3ea <- seq(from = 0, to = 1, length.out = 1000)\nprior_3ea <- rep(1, 1000)\nlikelihood_3ea <- dbinom(6, size = 9, prob = p_grid_3ea)\nposterior_3ea <- likelihood_3ea * prior_3ea\nposterior_3ea <- posterior_3ea / sum(posterior_3ea)\nset.seed(100)\nsamples_3ea <- sample(p_grid_3ea, prob = posterior_3ea, size = 1e4, replace = TRUE)\nhist(samples_3ea,\n     xlab = \"Probability\",\n     ylab = \"Frequency\",\n     main = \"Posterior distribution for the globe tossing example\")\n```\n\n::: {.cell-output-display}\n![](03-test_files/figure-html/exercise-data-3.27a-1.png){width=672}\n:::\n:::\n\n\n\n###### Tidyverse\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## R code 3.27b for exercises  #######################\n\ndf_3eb <- tibble::tibble(p_grid_3eb = base::seq(from = 0, to = 1, length.out = 1000),\n               prior_3eb = base::rep(1, 1000),\n               likelihood_3eb = stats::dbinom(6, size = 9, prob = p_grid_3eb),\n               posterior_3eb = likelihood_3eb * prior_3eb,\n               posterior_std_3eb = posterior_3eb / sum(posterior_3eb))\n\nbase::set.seed(100)\nsamples_3eb <- df_3eb |> \n  dplyr::slice_sample(n = 1e4, \n                      weight_by = posterior_std_3eb, replace = TRUE) |> \n  dplyr::rename(p_samples_3eb = p_grid_3eb)\n\nsamples_3eb |> \n  ggplot2::ggplot(ggplot2::aes(x = p_samples_3eb)) +\n  ggplot2::geom_histogram(bins = 20, fill = \"grey\", color = \"black\") +\n  ggplot2::theme_bw() +\n  ggplot2::labs(x = \"Propability\",\n                y = \"Frequency\",\n                title = \"Posterior distribution for the globe tossing example\")\n```\n\n::: {.cell-output-display}\n![](03-test_files/figure-html/exercise-data-3.27b-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n**Original**: \n0.7137137, 0.3573574, 0.5985986, 0.7177177, 0.6296296, …\n\n**Tidyerse**: \n0.7137137, 0.3573574, 0.5985986, 0.7177177, 0.6296296, …\n\n::::\n:::::\n\n\n#### Exercises 3E1 - 3E7\n\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercises 3E1 - 3E7\n\n- **3E1.** How much posterior probability lies below $p = 0.2$? \n- **3E2.** How much posterior probability lies above $p = 0.8$? \n- **3E3.** How much posterior probability lies between $p = 0.2$ and $p = 0.8$? \n- **3E4.** $20\\%$ of the posterior probability lies below which value of $p$? \n- **3E5.** $20\\%$ of the posterior probability lies above which value of $p$? \n- **3E6.** Which values of $p$ contain the narrowest interval equal to $66\\%$ of the posterior probability? \n- **3E7.** Which values of $p$ contain $66\\%$ of the posterior probability, assuming equal posterior probability both below and above the interval?\n:::\n::::{.my-exercise-container}\n\n\n::: {.panel-tabset}\n\n###### Original\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-easy-03a}\na: Exercises 3E1 - 3E7 (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## exercises 3E1a - 3E7a ####################\n\nsum(samples_3ea < 0.2) / 1e4                            ## 3.7a\nsum(samples_3ea > 0.8) / 1e4                            ## 3.7a\nsum(samples_3ea > 0.2 & samples_3ea < 0.8) / 1e4        ## 3.8a\nquantile(samples_3ea, 0.2)                       ## 3.9a\nquantile(samples_3ea, 0.8)                       ## 3.10a\nrethinking::HPDI(samples_3ea, prob = 0.66)              ## 3.13a\nrethinking::PI(samples_3ea, prob = 0.66)                ## 3.12a1\n\n## same as above\n## quantile(samples_3ea, prob = c(.1667, .8333))    ## 3.12a2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 4e-04\n#> [1] 0.1116\n#> [1] 0.888\n#>       20% \n#> 0.5185185 \n#>       80% \n#> 0.7557558 \n#>     |0.66     0.66| \n#> 0.5085085 0.7737738 \n#>       17%       83% \n#> 0.5025025 0.7697698\n```\n\n\n:::\n:::\n\n\n***\n\n- **3E1.** 0.04% of the posterior probability lies below $p = 0.2$. \n- **3E2.** 11.16% of the posterior probability lies above $p = 0.8$. \n- **3E3.** 88.8% posterior probability lies between $p = 0.2$ and $p = 0.8$.\n- **3E4.** $20\\%$ of the posterior probability lies below $p =$ 0.519. \n- **3E5.** $20\\%$ of the posterior probability lies above $p =$ 0.756. \n- **3E6.** $66\\%$ of the narrowest interval lies between 0.509 and 0.774.\n- **3E7.** The interval between 0.503 and 0.77 contains $66\\%$ of the posterior probability, assuming equal posterior probability both below and above the interval.\n\n::::\n:::::\n\n\n###### Tidyverse\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-easy-03b}\nb: Exercises 3E1 - 3E7 (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## exercises 3E1b - 3E7b ####################\n\n\n(e3b1 <- samples_3eb |> \n  dplyr::filter(p_samples_3eb < 0.2) |> \n  dplyr::summarize(sum = dplyr::n() / 1e4) |>\n  dplyr::pull())  \n                                                        ## 3.7b\n(e3b2 <- samples_3eb |> \n  dplyr::filter(p_samples_3eb > 0.8) |> \n  dplyr::summarize(sum = dplyr::n() / 1e4) |>            ## 3.7b\n  dplyr::pull())\n\n(e3b3 <- samples_3eb |> \n  dplyr::filter(p_samples_3eb > 0.2 & p_samples_3eb < 0.8) |> \n  dplyr::summarize(sum = dplyr::n() / 1e4) |>            ## 3.8b\n  dplyr::pull())\n\n(e3b4 <- stats::quantile(samples_3eb$p_samples_3eb, probs = .2))\n\n(e3b5 <- stats::quantile(samples_3eb$p_samples_3eb, probs = .8))\n\n(e3b6 <- tidybayes::mode_hdci(samples_3eb$p_samples_3eb, .width = .66))\n\n## tidybayes::mean_hdci(samples_3eb$p_samples_3eb, .width = .66)\n\n## same as above\n(e3b7 <- tidybayes::qi(samples_3eb$p_samples_3eb, .width = .66))\n\n\n### R Code 3.7b with alternative methods #########\n\n#base::sum(samples_3eb$p_samples_3eb < 0.2) / 1e4           ## 3.7b\n#\n# samples_3eb |> \n#   dplyr::summarize(sum = mean(p_samples_3eb > .8))       ## 3.7b\n# \n# samples_3eb |> \n#     dplyr::count(p_samples_3eb > .8) |> \n#     dplyr::mutate(probability = 1e4 / base::sum(1e4))   ## 3.7b\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 4e-04\n#> [1] 0.1116\n#> [1] 0.888\n#>       20% \n#> 0.5185185 \n#>       80% \n#> 0.7557558 \n#>           y      ymin      ymax .width .point .interval\n#> 1 0.6559935 0.5205205 0.7877878   0.66   mode      hdci\n#>           [,1]      [,2]\n#> [1,] 0.5025025 0.7697698\n```\n\n\n:::\n:::\n\n\n***\n\n- **3E1.** 0.04% of the posterior probability lies below $p = 0.2$. \n- **3E2.** 11.16% of the posterior probability lies above $p = 0.8$. \n- **3E3.** 88.8% posterior probability lies between $p = 0.2$ and $p = 0.8$.\n- **3E4.** $20\\%$ of the posterior probability lies below $p =$ 0.519. \n- **3E5.** $20\\%$ of the posterior probability lies above $p =$ 0.756. \n- **3E6.** $66\\%$ of the narrowest interval lies between 0.521 and 0.788.\n- **3E7.** The interval between 0.503 and 0.77 contains $66\\%$ of the posterior probability, assuming equal posterior probability both below and above the interval.\n\n\n:::::{.my-note}\n:::{.my-note-header}\n:::::: {#cor-3e3b}\n: Using `dplyr::between()`\n::::::\n:::\n::::{.my-note-container}\nI learned from Jake Thompson that I could have used `dplyr::between()` for the exercise 3E3: `mean(dplyr::between(p_samples_3eb$samples_3eb, 0.2, 0.8))` = 0.888\n::::\n:::::\n\n\n\n::::\n:::::\n\n:::::{.my-watch-out}\n:::{.my-watch-out-header}\nDifference between `rethinking::HPDI()` and `tidybayes::mode_hdci()`\n:::\n::::{.my-watch-out-container}\nThere is a small difference between `rethinking::HPDI()` (0.5085085 resp. 0.7737738) and `tidybayes::mode_hdci()` (0.5205205 and 0.7877878). \n::::\n:::::\n\n\n\n\n\n\n\n:::\n\n\n::::\n:::::\n\n### Middle\n\n#### 3M1 {#sec-e3m1}\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3M1: Suppose the globe tossing data had turned out to be 8 water in 15 tosses. Construct the posterior distribution, using grid approximation. Use the same flat prior as before.\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n\n###### Original\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m1a}\n: Exercise 3M1a (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_grid_3m1a <- seq(from = 0, to = 1, length.out = 1000)\nprior_3m1a <- rep(1, 1000)\nlikelihood_3m1a <- stats::dbinom(8, size = 15, prob = p_grid_3m1a)\nposterior_3m1a <-  likelihood_3m1a * prior_3m1a\nposterior_std_3m1a <-  posterior_3m1a / sum(posterior_3m1a) \nplot(p_grid_3m1a, posterior_std_3m1a, type = \"l\", \n     xlab = \"Proportion of water (p)\",\n     ylab = \"Posterior density\")\ngrid(lty = 1)\n\nmap_3m1a <- p_grid_3m1a[which.max(posterior_std_3m1a)]\n```\n\n::: {.cell-output-display}\n![Posterior distribution for 8 'W' in 15 tosses (Original)](03-test_files/figure-html/fig-exercise-3m1a-1.png){#fig-exercise-3m1a width=672}\n:::\n:::\n\n\nThe modus (<a class='glossary' title='In Bayesian statistics a Maximum A Posteriori probability or MAP is essentially the mode of posterior distribution. (CDS, p.272)'>MAP</a>) is at p = 0.534 with a posterior density of 0.00325.\n\n::::\n:::::\n\n###### Tidyverse\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m1a}\n: Exercise 3M1b (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_3m1b <- tibble::tibble(\n  p_grid_3m1b = base::seq(from = 0, to = 1, length.out = 1000),\n  prior_3m1b = base::rep(1, 1000),\n  likelihood_3m1b = stats::dbinom(x = 8, size = 15, prob = p_grid_3m1b),\n  posterior_3m1b =  likelihood_3m1b * prior_3m1b,\n  posterior_std_3m1b = posterior_3m1b / sum(posterior_3m1b)\n  ) \n\ndf_3m1b |> \n  ggplot2::ggplot(ggplot2::aes(x = p_grid_3m1b, y = posterior_std_3m1b)) +\n  ggplot2::geom_line() +\n  ggplot2::labs(x = \"Proportion of water (p)\",\n                y = \"Posterior density\") +\n  ggplot2::theme_bw()\n\nmap_3m1b <- df_3m1b |> \n  dplyr::arrange(dplyr::desc(posterior_std_3m1b)) |> \n  dplyr::summarize(dplyr::first(p_grid_3m1b)) |> \n  dplyr::pull(1)\n```\n\n::: {.cell-output-display}\n![Posterior distribution for 8 'W' in 15 tosses (Tidyverse)](03-test_files/figure-html/fig-exercise-3m1b-1.png){#fig-exercise-3m1b width=672}\n:::\n:::\n\nThe modus (<a class='glossary' title='In Bayesian statistics a Maximum A Posteriori probability or MAP is essentially the mode of posterior distribution. (CDS, p.272)'>MAP</a>) is at p = 0.5335335 with a posterior density of 0.0032519.\n\n\n::::\n:::::\n\n\n\n:::\n\n::::\n:::::\n\n***\n\n#### 3M2\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3M2: Draw $10,000$ samples from the grid approximation from above. Then use the samples to calculate the $90\\%$ and $99\\%$ HPDI for $p$.\n:::\n::::{.my-exercise-container}\n::: {.panel-tabset}\n\n###### Original\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m2a}\na: Exercise 3M2 (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1e4 samples #############\nset.seed(42)\nsamples_3m2a <-  sample(x = p_grid_3m1a,\n                       prob = posterior_std_3m1a, \n                       size = 1e4,\n                       replace = TRUE)\n\n## Density with rethinking::dens() ########\nrethinking::dens(samples_3m2a, adj = 1)\n\n## Parameters #########\n(pi_3m2a_1 <- rethinking::PI(samples_3m2a, prob = .9))\n(pi_3m2a_2 <- rethinking::PI(samples_3m2a, prob = .99))\n(hpdi_3m2a_1 <- rethinking::HPDI(samples_3m2a, prob = .9))\n(hpdi_3m2a_2 <- rethinking::HPDI(samples_3m2a, prob = .99))\n(mean_3m2a <- mean(samples_3m2a))\n(median_3m2a <- median(samples_3m2a))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>        5%       95% \n#> 0.3323323 0.7207708 \n#>        1%      100% \n#> 0.2382382 0.8148148 \n#>      |0.9      0.9| \n#> 0.3393393 0.7267267 \n#>     |0.99     0.99| \n#> 0.2312312 0.8048048 \n#> [1] 0.5295147\n#> [1] 0.5305305\n```\n\n\n:::\n\n::: {.cell-output-display}\n![10,000 samples from the grid approximation 8 water with 15 tosses (Original)](03-test_files/figure-html/fig-exercise-3m2a-1.png){#fig-exercise-3m2a width=672}\n:::\n:::\n\n\n- **Mean**:   0.53\n- **Median**: 0.531\n\n| Prior = 1   | Low                  | High                 | Diff                                    |\n|----------|----------------------|----------------------|-----------------------------------------|\n| PI .90   | 0.3323323   | 0.7207708   | 0.3884384     |\n| PI .99   | 0.2382382   | 0.8148148   | 0.3884384     |\n| HPDI .90 | 0.3393393 | 0.7267267 | 0.3873874 |\n| HPDI .99 | 0.2312312 | 0.8048048 | 0.5735736 |\n\n::::\n:::::\n\n\n\n###### Tidyverse\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m2b}\nb: Exercise 3M2 (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1e4 samples ##########\nbase::set.seed(42)\nsamples_3m2b <- df_3m1b |> \n  dplyr::slice_sample(n = 1e4, \n                      weight_by = posterior_std_3m1b, \n                      replace = TRUE) |> \n  dplyr::rename(p_samples_3m2b = p_grid_3m1b)  \n\n## Density with ggplot2\nsamples_3m2b |> \n  ggplot2::ggplot(ggplot2::aes(x = p_samples_3m2b)) +\n  ggplot2::geom_density(adjust = 1.0) + # 1.0 = default value\n  ggplot2::labs(x = \"N = 10000, Bandwith = 1.0\",\n                y = \"Density\") +\n  ggplot2::theme_bw()\n\n\n## Parameters ########\n(\n  param_3m2b <-  dplyr::bind_rows(\n    ggdist::mean_qi(samples_3m2b$p_samples_3m2b, .width = c(0.9, 0.99)),\n    ggdist::median_qi(samples_3m2b$p_samples_3m2b, .width = c(0.9, 0.99)),\n    ggdist::mode_qi(samples_3m2b$p_samples_3m2b, .width = c(0.9, 0.99)),\n    ggdist::mode_hdci(samples_3m2b$p_samples_3m2b, .width = c(0.9, 0.99)),\n    ggdist::mode_hdi(samples_3m2b$p_samples_3m2b, .width = c(0.9, 0.99))\n  )\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>            y      ymin      ymax .width .point .interval\n#> 1  0.5295147 0.3323323 0.7207708   0.90   mean        qi\n#> 2  0.5295147 0.2382382 0.8148148   0.99   mean        qi\n#> 3  0.5305305 0.3323323 0.7207708   0.90 median        qi\n#> 4  0.5305305 0.2382382 0.8148148   0.99 median        qi\n#> 5  0.5117147 0.3323323 0.7207708   0.90   mode        qi\n#> 6  0.5117147 0.2382382 0.8148148   0.99   mode        qi\n#> 7  0.5117147 0.3333333 0.7217217   0.90   mode      hdci\n#> 8  0.5117147 0.2312312 0.8048048   0.99   mode      hdci\n#> 9  0.5117147 0.3333333 0.7217217   0.90   mode       hdi\n#> 10 0.5117147 0.2312312 0.8048048   0.99   mode       hdi\n```\n\n\n:::\n\n::: {.cell-output-display}\n![10,000 samples from the grid approximation 8 water with 15 tosses (Tidyverse)](03-test_files/figure-html/fig-exercise-3m2b-1.png){#fig-exercise-3m2b width=672}\n:::\n:::\n\n\n\n::::\n:::::\n\n\n:::\n::::\n:::::\n\n***\n\n#### 3M3\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\n\nExercise 3M3: Construct a posterior predictive check for this model and data. This means simulate the distribution of samples, averaging over the posterior uncertainty in $p$. What is the probability of observing 8 water in 15 tosses?\n\n:::\n::::{.my-exercise-container}\n\nIn the following set of tabs \"Original\" is abbreviated with \"O\" and Tidyverse with \"T\".\n\n::: {.panel-tabset}\n###### Data (O)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m3a-data}\na: Exercise 3M3 -- Data (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase::set.seed(42)\n\n## R code 3.23a #############################\ndummy_3m3a <- stats::rbinom(1e4, size = 15, prob = samples_3m2a)\nas.data.frame(table(dummy_3m3a))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>    dummy_3m3a Freq\n#> 1           0    3\n#> 2           1   45\n#> 3           2   99\n#> 4           3  289\n#> 5           4  540\n#> 6           5  829\n#> 7           6 1134\n#> 8           7 1421\n#> 9           8 1419\n#> 10          9 1356\n#> 11         10 1195\n#> 12         11  817\n#> 13         12  483\n#> 14         13  280\n#> 15         14   74\n#> 16         15   16\n```\n\n\n:::\n:::\n\n::::\n:::::\n\n###### Plot (O)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m3a-plot}\na: Exercise 3M3 -- Histogram (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrethinking::simplehist(dummy_3m3a, xlab = \"Dummy water count\")\n```\n\n::: {.cell-output-display}\n![](03-test_files/figure-html/exercise-plot-3m3a-1.png){width=672}\n:::\n:::\n\n\n::::\n:::::\n\n###### Result (O)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m3a-result}\na: Exercise 3M3 -- Result (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n  mean_dummy_3m3a <- mean(dummy_3m3a == 8)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 0.1419\n```\n\n\n:::\n:::\n\n::::\n:::::\n\n\nThe probability of observing 8 water in 15 tosses = 14.19%.\n\n\n###### Data (T)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m3b-data}\nb: Exercise 3M3 -- Data (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase::set.seed(42)\n\n## R code 3.23b #############################\n\nsamples_3m2b <- samples_3m2b |> \n  dplyr::mutate(dummy_3m3b = stats::rbinom(1e4, size = 15, prob = p_samples_3m2b))\n  \nsamples_3m2b |> \n  dplyr::group_by(dummy_3m3b) |> \n  dplyr::summarize(dummy_cnt = dplyr::n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 16 × 2\n#>    dummy_3m3b dummy_cnt\n#>         <int>     <int>\n#>  1          0         3\n#>  2          1        45\n#>  3          2        99\n#>  4          3       289\n#>  5          4       540\n#>  6          5       829\n#>  7          6      1134\n#>  8          7      1421\n#>  9          8      1419\n#> 10          9      1356\n#> 11         10      1195\n#> 12         11       817\n#> 13         12       483\n#> 14         13       280\n#> 15         14        74\n#> 16         15        16\n```\n\n\n:::\n:::\n\n::::\n:::::\n\n###### Plot (T)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m3b-plot}\nb: Exercise 3M3 -- Histogram (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples_3m2b |> \n  ggplot2::ggplot(ggplot2::aes(x = dummy_3m3b)) +\n  ggplot2::geom_histogram(bins = 16, fill = \"grey\", color = \"black\") +\n  ggplot2::theme_bw() +\n  ggplot2::labs(x = \"Dummy water count\",\n                y = \"Frequnecy\")\n```\n\n::: {.cell-output-display}\n![Posterior predictive check for 8 water with 15 tosses](03-test_files/figure-html/fig-exercise-plot-3m3b-1.png){#fig-exercise-plot-3m3b width=672}\n:::\n:::\n\n\n::::\n:::::\n\n###### Result (T)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m3b-result}\nb: Exercise 3M3 -- Result (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n  mean_dummy_3m3b <- samples_3m2b |> \n  dplyr::summarize(mean(dummy_3m3b == 8)) |> \n  dplyr::pull()\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 0.1419\n```\n\n\n:::\n:::\n\n\nThe probability of observing 8 water in 15 tosses = 14.19%.\n\n\n::::\n:::::\n\n\n:::\n\n::::\n:::::\n\n***\n\n#### 3M4\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3M4: Using the posterior distribution constructed from the new (8/15) data, now calculate the probability of observing 6 water in 9 tosses.\n:::\n::::{.my-exercise-container}\n\nThere are two possible approaches for the solution:\n\n- **S1**: Random generation of the binomial distribution with the probability of the sampling distribution.\n- **S2**: Computing the density for 6/9 but with the posterior distribution from 8/15 as prior.\n\n::: {.panel-tabset}\n\n###### Original S1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m4a1}\na: Exercise 3M4 (Original: Method S1)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\nsamples_3m4a <- rbinom(1e4, size = 9, prob = samples_3m2a)\nmean(samples_3m4a == 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 0.1765\n```\n\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n###### Original S2 \n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m4a2}\na: Exercise 3M4 (Original: Method S2)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|label: exercise-3m4a2\n\nlikelihood_6of9_3m4a <-  stats::dbinom(6, size = 9, prob = p_grid_3m1a)\nprior_6of9_3m4a <-  posterior_std_3m1a\n(\n  posterior_6of9_3m4a <- sum(likelihood_6of9_3m4a * prior_6of9_3m4a)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 0.1763898\n```\n\n\n:::\n:::\n\n\n\n::::\n:::::\n\n\n\n###### Tidyverse S1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m4b}\nb: Exercise 3M4 (Tidyverse: Method S1)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\nsamples_3m2b |> \n  dplyr::mutate(\n    p_6of9_3m4b = stats::rbinom(1e4, size = 9, prob = p_samples_3m2b)\n    ) |> \n  dplyr::summarize(sum = base::mean(p_6of9_3m4b == 6)) |> \n  dplyr::pull()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 0.1765\n```\n\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n###### Tidyverse M2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m4b}\nb: Exercise 3M4 (Tidyverse Method S2)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_3m1b |> \n  dplyr::mutate(\n    likelihood_6of9_3m4b = stats::dbinom(6, size = 9, prob = p_grid_3m1b),\n    prior_6of9_3m4b = posterior_std_3m1b) |> \n  dplyr::summarize(sum = base::sum(likelihood_6of9_3m4b * prior_6of9_3m4b)) |> \n  dplyr::pull()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 0.1763898\n```\n\n\n:::\n:::\n\n\n\n\n::::\n:::::\n\n\n:::\n\n::::\n:::::\n\n***\n\n#### 3M5\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3M5: Start over at Exercise 3M1 (@sec-e3m1), but now use a prior that is zero below $p = 0.5$ and a constant above $p = 0.5$. This corresponds to prior information that a majority of the Earth’s surface is water. Repeat each problem above and compare the inferences. What difference does the better prior make? If it helps, compare inferences (using both priors) to the true value $p = 0.7$.\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n\n###### 3M5.1a\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m5a-1}\na: Exercise 3M5: Posterior Distribution (~ 3M1: Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## repr 3M1a ###########\np_grid_3m5a <- seq(from = 0, to = 1, length.out = 1000)\nprior_3m5a <- ifelse(p_grid_3m5a < 0.5, 0, 1)\nlikelihood_3m5a <- stats::dbinom(8, size = 15, prob = p_grid_3m5a)\nposterior_3m5a <-  likelihood_3m5a * prior_3m5a\nposterior_std_3m5a <-  posterior_3m5a / sum(posterior_3m5a) \nplot(p_grid_3m5a, posterior_std_3m5a, type = \"l\", lty = \"dashed\",\n     xlab = \"Proportion of water (p)\",\n     ylab = \"Posterior density\")\nlines(p_grid_3m1a, posterior_std_3m1a)\nabline(v = .7, col = \"red\")\ngrid(lty = 1)\n```\n\n::: {.cell-output-display}\n![Posterior distribution for 8 'W' in 15 tosses with prior < 0.5 = 0 otherwise prior = 1 (Original)](03-test_files/figure-html/fig-exercise-3m5a-1-1.png){#fig-exercise-3m5a-1 width=672}\n:::\n:::\n\n\nCompared with the true value of $0.7$ the new prior ($0$ under $p = 0.5$, otherwise $p = 1$) is better, but there is still a big difference between the true value and the mode of the probability density.\n\n::::\n:::::\n\n###### 3M5.2a\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m5a-2}\na: Exercise 3M5.2: HPDI of 90% from 1e4 samples (~3M2: Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## repr 3M2a #############\nset.seed(42)\nsamples_3m5a <- sample(x = p_grid_3m5a, \n                      size = 1e4, \n                      replace = TRUE, \n                      prob = posterior_std_3m5a\n                      )\nhpdi_3m5a <- rethinking::HPDI(samples_3m5a, .9)\n\nmax_3m2a <- max(posterior_std_3m1a)\nmax_3m5a <- max(posterior_std_3m5a)\n```\n:::\n\n\n| Prior | Low                | High               | Diff                                | Max Density  |\n|-------|--------------------|--------------------|-------------------------------------|--------------|\n| 1     | 0.3393393 | 0.7267267 | 0.3873874 | 0.0032519 |\n| 0/1   | 0.5005005 | 0.7117117 | 0.2112112 | 0.0054363 |\n\nThe HPDI interval is smaller with the the new prior $p < .5 = 0 \\operatorname{and} p >= .5 = 1$ than with a constant prior of $1$. The new prior is better as it gives more precise information.\n\nThe maximum posterior density of the new prior $0/1$ is higher than the maximum with the prior of $1$. Values of $p < 0.5$ are no longer taking up posterior density because they are $0$. This can also be seen in @fig-exercise-3m5a-1.\n::::\n:::::\n\n###### 3M5.3a\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m5a-3}\na: Exercise 3M5.3: Posterior predictive check (~3M3: Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## repr 3M3a ##############\nset.seed(42)\ndummy_3m5a_1 <- rbinom(1e4, 15, samples_3m5a)\nmean_3m5a_1 <- mean(dummy_3m5a_1 == 8)\n\n## repr 3M4a ##############\nset.seed(42)\ndummy_3m5a_2 <- rbinom(1e4, 9, samples_3m5a)\nmean_3m5a_2 <- mean(dummy_3m5a_2 == 6)\n\n## compare with p = 0.7 ##############\nset.seed(42)\ndummy_3m5a_3 <- rbinom(1e4, 15, 0.7)\nmean_3m5a_3 <- mean(dummy_3m5a_3 == 8)\n\nset.seed(42)\ndummy_3m5a_4 <- rbinom(1e4, 9, 0.7)\nmean_3m5a_4 <- mean(dummy_3m5a_4 == 6)\n```\n:::\n\n\n| Name      | Mean of 15/08   | Mean of 09/06   |\n|-----------|-----------------|-----------------|\n| Samples   | 0.1516 | 0.2401 |\n| Value 0.7 | 0.0822 | 0.265 |\n\nThe mean of the samples of 6 water observations with 9 tosses are higher than 8 water with 15 tosses. This represents the fact that the real value of 0.7 is nearer with 6/9 = 0.667 than with 8/15 = 0.533. Also note that a predictive check with the real value of $0.7$ shows a very small mean value with 15/8 but a much higher mean with 9/6.\n\n::::\n:::::\n\n###### 3M5.1b\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m5b-1}\nb: Exercise 3M5: Posterior Distribution (~ 3M1: Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## repr 3M1b ##############\ndf_3m5b <- tibble::tibble(\n  p_grid_3m5b = base::seq(from = 0, to = 1, length.out = 1000),\n  prior_3m5b = base::ifelse(p_grid_3m5b < 0.5, 0, 1),\n  likelihood_3m5b = stats::dbinom(x = 8, size = 15, prob = p_grid_3m5b),\n  posterior_3m5b =  likelihood_3m5b * prior_3m5b,\n  posterior_std_3m5b = posterior_3m5b / sum(posterior_3m5b)\n  )\n\nggplot2::ggplot() +\nggplot2::geom_line(data = df_3m5b,\n                mapping = ggplot2::aes(x = p_grid_3m5b, y = posterior_std_3m5b,\n                                       linetype = \"ifelse(p < 0.5, 0, 1)\")) +\nggplot2::geom_line(data = df_3m1b,\n                mapping = ggplot2::aes(x = p_grid_3m1b, y = posterior_std_3m1b,\n                                       linetype = \"1\")) +\nggplot2::scale_linetype_manual(\"Prior:\", \n                        values = c(\"solid\", \"dashed\")) +\nggplot2::geom_vline(xintercept = .7, color = \"red\") +\nggplot2::labs(x = \"Proportion of water (p)\",\n              y = \"Posterior density\") +\nggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![Posterior distribution for 8 'W' in 15 tosses with prior < 0.5 = 0 otherwise prior = 1 (Tidyverse)](03-test_files/figure-html/fig-exercise-3m5b-1-1.png){#fig-exercise-3m5b-1 width=672}\n:::\n:::\n\n\n\nCompared with the true value of $0.7$ the new prior ($0$ under $p = 0.5$, otherwise $p = 1$) is better, but there is still a big difference between the true value and the mode of the probability density.\n::::\n:::::\n\n###### 3M5.2b\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m5b-2}\nb: Exercise 3M5.2: HPDI of 90% from 1e4 samples (~3M2: Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## repr 3M2b ##############\nset.seed(42)\nsamples_3m5b <- df_3m5b |> \n  dplyr::slice_sample(n = 1e4,\n                      weight_by = posterior_std_3m5b,\n                      replace = TRUE) |> \n  dplyr::rename(p_samples_3m5b = p_grid_3m5b)\n\n\nhpdi_3m2b <- rethinking::HPDI(samples_3m2b$p_samples_3m2b, .9)\nhpdi_3m5b <- rethinking::HPDI(samples_3m5b$p_samples_3m5b, .9)\n\nmax_3m2b <- max(df_3m1b$posterior_std_3m1b)\nmax_3m5b <- max(df_3m5b$posterior_std_3m5b)\n```\n:::\n\n\n| Prior | Low                | High               | Diff                                | Max Density  |\n|-------|--------------------|--------------------|-------------------------------------|--------------|\n| 1     | 0.3393393 | 0.7267267 | 0.3873874 | 0.0032519 |\n| 0/1   | 0.5005005 | 0.7117117 | 0.2112112 | 0.0054363 |\n\nThe HPDI interval is smaller with the the new prior $p < .5 = 0 \\operatorname{and} p >= .5 = 1$ than with a constant prior of $1$. The new prior is better as it gives more precise information.\n\nThe maximum posterior density of the new prior $0/1$ is higher than the maximum with the prior of $1$. Values of $p < 0.5$ are no longer taking up posterior density because they are $0$. This can also be seen in @fig-exercise-3m5b-1.\n\n\n\n::::\n:::::\n\n###### 3M5.3b\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m5b-3}\nb: Exercise 3M5.3: Posterior predictive check (~3M3: Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## repr 3M3b ##############\nset.seed(42)\ndummy_3m5b_1 <- rbinom(1e4, 15, samples_3m5b$p_samples_3m5b)\nmean_3m5b_1 <- mean(dummy_3m5b_1 == 8)\n\n## repr 3M4b ##############\nset.seed(42)\ndummy_3m5b_2 <- rbinom(1e4, 9, samples_3m5b$p_samples_3m5b)\nmean_3m5b_2 <- mean(dummy_3m5b_2 == 6)\n\n## compare with p = 0.7 ##############\nset.seed(42)\ndummy_3m5b_3 <- rbinom(1e4, 15, 0.7)\nmean_3m5b_3 <- mean(dummy_3m5b_3 == 8)\n\nset.seed(42)\ndummy_3m5b_4 <- rbinom(1e4, 9, 0.7)\nmean_3m5b_4 <- mean(dummy_3m5b_4 == 6)\n```\n:::\n\n\n| Name      | Mean of 15/08   | Mean of 09/06   |\n|-----------|-----------------|-----------------|\n| Samples   | 0.1516 | 0.2401 |\n| Value 0.7 | 0.0822 | 0.265 |\n\nThe mean of the samples of 6 water observations with 9 tosses are higher than 8 water with 15 tosses. This represents the fact that the real value of 0.7 is nearer with 6/9 = 0.667 than with 8/15 = 0.533. Also note that a predictive check with the real value of $0.7$ shows a very small mean value with 15/8 but a much higher mean with 9/6.\n\n::::\n:::::\n\n\n:::\n\n\n\n::::\n:::::\n\n***\n\n#### 3M6\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3M6: Suppose you want to estimate the Earth’s proportion of water very precisely. Specifically, you want the 99% percentile interval of the posterior distribution of $p$ to be only $0.05$ wide. This means the distance between the upper and lower bound of the interval should be $0.05$. \n\n- **N tosses**: How many times will you have to toss the globe to do this?\n- **Width**: How influences the sample size the difference between samples?\n\n\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n###### N tosses (O)\n\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m6a-1}\na: Exercise 3M6-1: How many times will you have to toss the globe to get a $0.05$ wide interval with $PI = .99$?  (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\nAlthough McElreath states explicitly that he won't require an exact answer but rather wants to see the chosen approach ([Winter 2019 Homework](https://github.com/rmcelreath/statrethinking_winter2019/blob/master/homework/week01.pdf)) I was curious about the figure and how to program this process. It turned out that the chosen `set.seed()` number has effects how many times one has to toss the globe.\n\n\n\n\n\n::: {.cell hash='03-test_cache/html/exercise-3m6a-1_0b510979a615c82cea620f80c95730c1'}\n\n```{.r .cell-code}\npi99_3m6a <- function(N, seed) {\n  set.seed(seed)\n  p_true <-  0.7\n  W <- rbinom(1, size = N, prob = p_true)\n  p_grid_3m6a <- seq(from = 0, to = 1, length.out = 1000)\n  prior_3m6a <- rep(1, 1000)\n  likelihood_3m6a <- dbinom(W, size = N, prob = p_grid_3m6a)\n  posterior_3m6a <- likelihood_3m6a * prior_3m6a\n  posterior_std_3m6a <-  posterior_3m6a / sum(posterior_3m6a)\n  \n  samples_3m6a <-\n    sample(p_grid_3m6a,\n           prob = posterior_std_3m6a,\n           size = 1e4,\n           replace = TRUE)\n  rethinking::PI(samples_3m6a, 0.99)\n}\n\n\ntictoc::tic()\nN = 1\nmy_seed = c(3, 42, 100, 150)\ns = ''\n\nfor (i in 1:length(my_seed)) {\n  PI99 <- pi99_3m6a(N, my_seed[i])\n  while (as.numeric(PI99[2] - PI99[1] > 0.05)) {\n    N <- N + 1\n    PI99 <- pi99_3m6a(N, my_seed[i])\n  }\n  s[i] <- glue::glue('With set.seed({my_seed[i]}) we need to toss the globe {N} times.\\n')\n  N = 1\n}\ns\ntictoc::toc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] \"With set.seed(3) we need to toss the globe 2102 times.\"  \n#> [2] \"With set.seed(42) we need to toss the globe 2208 times.\" \n#> [3] \"With set.seed(100) we need to toss the globe 2304 times.\"\n#> [4] \"With set.seed(150) we need to toss the globe 2115 times.\"\n#> 9.357 sec elapsed\n```\n\n\n:::\n:::\n\n\n\n::::\n:::::\n\n###### Width (O)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m6a-2}\na: Exercise 3M6-2: Demonstrate the variation of the interval width with different number of simulations (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell hash='03-test_cache/html/exercise-3m6a-2_f487a6caadb193940a576fe6ffa2dde5'}\n\n```{.r .cell-code}\nf_3m6a <- function(N) {\n  p_true <-  0.7\n  W <- rbinom(1, size = N, prob = p_true)\n  p_grid_3m6a <- seq(from = 0, to = 1, length.out = 1000)\n  prior_3m6a <- rep(1, 1000)\n  likelihood_3m6a <- dbinom(W, size = N, prob = p_grid_3m6a)\n  posterior_3m6a <- likelihood_3m6a * prior_3m6a\n  posterior_std_3m6a <-  posterior_3m6a / sum(posterior_3m6a)\n  \n  samples_3m6a <-\n    sample(p_grid_3m6a,\n           prob = posterior_std_3m6a,\n           size = 1e4,\n           replace = TRUE)\n  pi_99_3m6a <-  rethinking::PI(samples_3m6a, 0.99)\n  as.numeric(pi_99_3m6a[2] - pi_99_3m6a[1])\n}\n\n\nNlist <- c(20, 50, 100, 200, 500, 1000, 2000) \nNlist <- rep(Nlist, each = 100) \nwidth <- sapply(Nlist, f_3m6a) \nplot(Nlist, width) \nabline(h = 0.05, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](03-test_files/figure-html/exercise-3m6a-2-1.png){width=672}\n:::\n:::\n\n\nThe difference between samples shrinks as the sample size increases.\n\n> What are we looking at in this plot? The horizontal is sample size. The points are individual interval widths, one for each simulation. The red line is drawn at a width of $0.05$. Looks like we need more than $2000$ tosses of the globe to get the interval to be that precise.\n>\n> The above is a general feature of learning from data: The greatest returns on learning come early on. Each additional observation contributes less and less. So it takes very much effort to progressively reduce our uncertainty. So if your application requires a very precise estimate, be prepared to collect a lot of data. Or to change your approach. ([Solution, Week-01, Winter 2019](https://github.com/rmcelreath/statrethinking_winter2019/blob/master/homework/week01_solutions.pdf))\n\n::::\n:::::\n\n###### N tosses (T)\n\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m6b-1}\nb: Exercise 3M6-1: How many times will you have to toss the globe to get a $0.05$ wide interval with $PI = .99$?  (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\nBecause of the slow performance of manipulating whole data frame, I am going to use here just one `set.seed()` function. This is only to show that we get the same result as in the first loop of @cnj-3m6a-1.\n\n\n\n::: {.cell hash='03-test_cache/html/exercise-3m6b-1_3e35e9c2c24eee9da9a45ee635754684'}\n\n```{.r .cell-code}\npi99_3m6b <- function(N, seed) {\n  base::set.seed(seed)\n  p_true <-  0.7\n  W <- stats::rbinom(1, size = N, prob = p_true)\n  df_3m6b <-  tibble::tibble(p_grid_3m6b = \n                            base::seq(from = 0, to = 1, length.out = 1000)) |> \n    dplyr::mutate(prior_3m6b = base::rep(1, 1000),\n           likelihood_3m6b = stats::dbinom(W, size = N, prob = p_grid_3m6b),\n           posterior_3m6b = likelihood_3m6b * prior_3m6b,\n           posterior_std_3m6b = posterior_3m6b / sum(posterior_3m6b))\n  \n  samples_3m6b <- df_3m6b |> \n    dplyr::slice_sample(n = 1e4,\n                        weight_by = posterior_std_3m6b,\n                        replace = TRUE)\n  \n  rethinking::PI(samples_3m6b$p_grid_3m6b, 0.99)\n}\n\ntictoc::tic()\nN = 1\nmy_seed = 3 ## just one loop!\ns = ''\n\nfor (i in 1:length(my_seed)) {\n  PI99_3m6b <- pi99_3m6b(N, my_seed[i])\n  while (as.numeric(PI99_3m6b[2] - PI99_3m6b[1] > 0.05)) {\n    N <- N + 1\n    PI99_3m6b <- pi99_3m6b(N, my_seed[i])\n  }\n  s[i] <- glue::glue('With set.seed({my_seed[i]}) we need to toss the globe {N} times.\\n')\n  N = 1\n}\ns\ntictoc::toc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] \"With set.seed(3) we need to toss the globe 2102 times.\"\n#> 9.341 sec elapsed\n```\n\n\n:::\n:::\n\nCompare the execution time of just one set.seed() calculation with four in @cnj-3m6a-1. Using data frames turns out about 16(!) times slower the computation with vectors. (Already just one set.seed() computation with tibbles is 4 times slower than the processing time of 4 set.seed() loops with base R vectors.)\n\n::::\n:::::\n\n###### Width (T)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3m6b-2}\nb: Exercise 3M6-2: Demonstrate the variation of the interval width with different number of simulations (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell hash='03-test_cache/html/exercise-3m6b-2_ef235da70e65aad8ff19a7648e3a6dfc'}\n\n```{.r .cell-code}\nf_3m6b <- function(N) {\n  p_true <-  0.7\n  W <- stats::rbinom(1, size = N, prob = p_true)\n  df_3m6b <-  tibble::tibble(p_grid_3m6b = \n                            base::seq(from = 0, to = 1, length.out = 1000)) |> \n    dplyr::mutate(prior_3m6b = base::rep(1, 1000),\n           likelihood_3m6b = stats::dbinom(W, size = N, prob = p_grid_3m6b),\n           posterior_3m6b = likelihood_3m6b * prior_3m6b,\n           posterior_std_3m6b = posterior_3m6b / sum(posterior_3m6b))\n  \n  samples_3m6b <- df_3m6b |> \n    dplyr::slice_sample(n = 1e4,\n                        weight_by = posterior_std_3m6b,\n                        replace = TRUE)\n  pi_99_3m6b <-  rethinking::PI(samples_3m6b$p_grid_3m6b, 0.99)\n  as.numeric(pi_99_3m6b[2] - pi_99_3m6b[1])\n}\n\n\nNlist_3m6b <- c(20, 50, 100, 200, 500, 1000, 2000) \n\n\ndf_3m6b_2 <- \n  tibble::tibble(Nlist_3m6b = base::rep(Nlist_3m6b, each = 100)) |> \n  dplyr::mutate(width_3m6b = purrr::map_dbl(Nlist_3m6b, f_3m6b))\n\ndf_3m6b_2 |> \n  ggplot2::ggplot(ggplot2::aes(x = Nlist_3m6b,\n                             y = width_3m6b)) +\n  ggplot2::geom_point(alpha = 1/10) +\n  ggplot2::labs(x = \"Number of samples\",\n                y = \"Width of PI = 0.99\") +\n  ggplot2::geom_hline(yintercept = .05, color = \"red\") +\n  ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![](03-test_files/figure-html/exercise-3m6b-2-1.png){width=672}\n:::\n:::\n\n\nThe difference between samples shrinks as the sample size increases.\n\n> What are we looking at in this plot? The horizontal is sample size. The points are individual interval widths, one for each simulation. The red line is drawn at a width of $0.05$. Looks like we need more than $2000$ tosses of the globe to get the interval to be that precise.\n>\n> The above is a general feature of learning from data: The greatest returns on learning come early on. Each additional observation contributes less and less. So it takes very much effort to progressively reduce our uncertainty. So if your application requires a very precise estimate, be prepared to collect a lot of data. Or to change your approach. ([Solution, Week-01, Winter 2019](https://github.com/rmcelreath/statrethinking_winter2019/blob/master/homework/week01_solutions.pdf))\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n***\n\n\n### Hard\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3h1-5}\n: Reported first and second born children in 100 two-child families\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\n## R code 3.28 ###############\nbirth1 <- c(\n  1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n  1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n  0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0,\n  1, 0, 1, 1, 1, 0, 1, 1, 1, 1\n)\n\nbirth2 <- c(\n  0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0,\n  1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n  0, 0, 0, 1, 1, 1, 0, 0, 0, 0\n)\n\n\n## R code 3.30 ###############\nn_boys <- sum(birth1) + sum(birth2)\n```\n:::\n\n200 Births of these are boys:\n\n- 1st born: 51\n- 2nd born: 60, \n- total: 111\n::::\n:::::\n\n#### 3H1\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3H1: Using grid approximation, compute the posterior distribution for the probability of a birth being a boy. Assume a uniform prior probability. Which parameter value maximizes the posterior probability?\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n###### Boys (Original)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3H1a}\na: Posterior distribution for the probability of a birth being a boy (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_grid_3h1a <- seq(from = 0,\n                   to = 1,\n                   length.out = 1e3)\nprior_3h1a <- rep(0.5, 1e3)\nlikelihood_3h1a <- dbinom(x = sum(birth1) + sum(birth2),\n                          size = 200,\n                          prob = p_grid_3h1a)\nposterior_3h1a <-  prior_3h1a * likelihood_3h1a\nposterior_std_3h1a <- posterior_3h1a / sum(posterior_3h1a)\nplot(p_grid_3h1a, posterior_std_3h1a, type = \"l\")\nmap_3h1a <- p_grid_3h1a[which.max(posterior_std_3h1a)]\n```\n\n::: {.cell-output-display}\n![Posterior distribution of boys rate probability (Original)](03-test_files/figure-html/fig-exercise-3h1a-1.png){#fig-exercise-3h1a width=672}\n:::\n:::\n\n\nThe mode or <a class='glossary' title='In Bayesian statistics a Maximum A Posteriori probability or MAP is essentially the mode of posterior distribution. (CDS, p.272)'>MAP</a> is at 0.555, e.g. the birth ratio for boys is 55.5%.\n\n::::\n:::::\n\n###### Boys (Tidyverse)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3h1b}\nb: Posterior distribution for the probability of a birth being a boy (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_3h1b <- tibble::tibble(p_grid_3h1b = base::seq(\n                   from = 0,\n                   to = 1,\n                   length.out = 1e3)) |> \n    dplyr::mutate(prior_3h1b = base::rep(0.5, 1e3),\n           likelihood_3h1b = stats::dbinom(\n                          x = base::sum(birth1) + base::sum(birth2),\n                          size = 200,\n                          prob = p_grid_3h1b),\n           posterior_3h1b = prior_3h1b * likelihood_3h1b,\n           posterior_std_3h1b = posterior_3h1b / sum(posterior_3h1b))\n\nmap_3h1b <- df_3h1b |> \n  dplyr::arrange(dplyr::desc(posterior_std_3h1b)) |> \n  dplyr::summarize(dplyr::first(p_grid_3h1b)) |> \n  dplyr::pull(1)\n\ndf_3h1b |> \n  ggplot2::ggplot(ggplot2::aes(x = p_grid_3h1b,\n                               y = posterior_std_3h1b)) +\n  ggplot2::geom_line() +\n  ggplot2::geom_vline(xintercept = map_3h1b, color = \"red\") +\n  ggplot2::labs(x = \"Ratio of boy births\",\n                y = \"Posterior distribution\") +\n  ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![Posterior distribution of boys rate probability (Tidyverse)](03-test_files/figure-html/fig-exercise-3h1b-1.png){#fig-exercise-3h1b width=672}\n:::\n:::\n\n\nThe mode or <a class='glossary' title='In Bayesian statistics a Maximum A Posteriori probability or MAP is essentially the mode of posterior distribution. (CDS, p.272)'>MAP</a> is at 0.555, e.g. the birth ratio for boys is 55.5%.\n\n:::::{.my-note}\n:::{.my-note-header}\nNote: {*tidybayes*} point intervals needs samples\n:::\n::::{.my-note-container}\n\nI computed the mode by arranging the data frame with the highest value at the top. This is exactly the same value as in the book version. Another Base R solution would be `df_3h1b$p_grid_3h1b[which.max(df_3h1b$posterior_std_3h1b)]` = 55.4554555%.\n\nI tried to calculate the mode also with the {**tidybayes**} package. But all mode values from this package (`mode_qi()`, `mode_hdci()`, `mode_hdi()` and `Mode())` result in smaller values, for instance `tidybayes::Mode(samples_3m2b$p_samples_3m2b)` = 51.2%. \n\nAfter many trials and exerpiments I came to the conclusion that above mentioned functions of the {**tidybayes**} package work only with generated samples. Therefore I do not have to address two columns as with the `which.max()` (one outside and one inside the square brackets) and I have to supply vectors with the above mentioned family of function form the {**tidybayes**} package.\n\nFurthermore I noticed that all point_intervals without `mode_`, `median_` and `mean_` in front of the `qi`, `ll`, `ul`, `hdi`, `hdci` is not in {**tidybayes**} but in the accompanying package {**ggdist**} and need therefore as prefix `ggdist::`. Furthermore these functions needs numerical vectors and can't therfore used with the pipe.\n\n::::\n:::::\n\n\n\n\n\n\n::::\n:::::\n\n\n\n\n:::\n\n\n\n\n::::\n:::::\n\n***\n\n\n\n#### 3H2\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3H2: Using the `sample()` function, draw $10,000$ random parameter values from the posterior distribution you calculated above. Use these samples to estimate the $50\\%$, $89\\%$, and $97\\%$ highest posterior density intervals.\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n###### Sample (Original)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3h2a}\na: Draw $10,000$ random parameter values from the posterior distribution you calculated above (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\nsamples_3h2a <- sample(x = p_grid_3h1a,\n                       size = 1e4,\n                       replace = TRUE,\n                       prob = posterior_std_3h1a)\nrethinking::HPDI(samples_3h2a, c(.5, .89, .97))\n\nmap_3h2a <- rethinking::chainmode(samples_3h2a, adj = 1)\n\nrethinking::dens(samples_3h2a, adj = 1)\nabline(v = map_3h2a, col = \"red\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>     |0.97     |0.89      |0.5      0.5|     0.89|     0.97| \n#> 0.4824825 0.4994995 0.5265265 0.5725726 0.6076076 0.6296296\n```\n\n\n:::\n\n::: {.cell-output-display}\n![10.000 samples from the posterior distribution of the birth data (Original)](03-test_files/figure-html/fig-exercise-3h2a-1.png){#fig-exercise-3h2a width=672}\n:::\n:::\n\n\nThe red line is the density mode (0.555) calculated with `rethinking::chainmode()`.\n\n::::\n:::::\n\n###### Sample (Tidyverse)\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3h2b}\nb: Draw $10,000$ random parameter values from the posterior distribution you calculated above (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\nsamples_3h2b <-  df_3h1b |> \n  dplyr::slice_sample(n = 1e4,\n                      replace = TRUE,\n                      weight_by = posterior_std_3h1b)\n(\n  map_3h2b <- samples_3h2b |> \n    tidybayes::mode_hdi(p_grid_3h1b, .width = c(.5, .89, .97)) \n)\n\nsamples_3h2b |> \n  ggplot2::ggplot(ggplot2::aes(x = p_grid_3h1b)) +\n  ggplot2::geom_density() +\n  ggplot2::geom_vline(xintercept = map_3h2b[[1, 1]], color = \"red\") +\n  ggplot2::labs(x = \"Ratio of boy births\",\n                y = \"Samples from the posterior distribution\") +\n  ggplot2::theme_bw()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 3 × 6\n#>   p_grid_3h1b .lower .upper .width .point .interval\n#>         <dbl>  <dbl>  <dbl>  <dbl> <chr>  <chr>    \n#> 1       0.555  0.531  0.577   0.5  mode   hdi      \n#> 2       0.555  0.504  0.613   0.89 mode   hdi      \n#> 3       0.555  0.483  0.632   0.97 mode   hdi\n```\n\n\n:::\n\n::: {.cell-output-display}\n![10.000 samples from the posterior distribution of the birth data (Tidyverse)](03-test_files/figure-html/fig-exercise-3h2b-1.png){#fig-exercise-3h2b width=672}\n:::\n:::\n\n\nThe red line is the density mode (0.555) calculated with `tidybayes::mode_hdi()` and also displayed in the column `p_grid_3h1b`.\n\n::::\n:::::\n\n\n\n\n\n:::\n\n::::\n:::::\n\n\n\n\n***\n\n#### 3H3\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3H3: Use `rbinom()` to simulate $10,000$ replicates of $200$ births. You should end up with $10,000$ numbers, each one a count of boys out of $200$ births. Compare the distribution of predicted numbers of boys to the actual count in the data ($111$ boys out of $200$ births). There are many good ways to visualize the simulations, but the `dens()`  command (part of the {**rethinking**} package) is probably the easiest way in this case. Does it look like the model fits the data well? That is, does the distribution of predictions include the actual observation as a central, likely outcome?\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n###### 3H3a \n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3h3a}\na: Posterior predictive distribution with 10,000 replicates of 200 births (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\ndummy_data_3h3a <-  rbinom(n = 1e4,\n                           size = 200,\n                           prob = samples_3h2a)\nhead(dummy_data_3h3a, 10)\n\nrethinking::dens(dummy_data_3h3a, \n                 adj = 1)\nabline(v = sum(birth1 + birth2), col = \"red\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  [1] 105 124  98 102  94  96  98 107 101 108\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Create posterior predictive distribution with 10,000 replicates of 200 births (Original)](03-test_files/figure-html/fig-exercise-3h3a-1.png){#fig-exercise-3h3a width=672}\n:::\n:::\n\n\nThe model appears to fit well, because the observed value of 111 boys is in the middle of the <a class='glossary' title='An approach to assessing model fit. It is the distribution for future predicted data based on the data you have already seen. Measures of discrepancy between the estimated model and the data are constructed and their posterior predictive distribution compared to the discrepancy observed for the dataset. (CDS, p. 334)'>posterior predictive distribution</a> which has a mean of 110.7847 and a median of 111.\n\n::::\n:::::\n\n\n###### 3H3b\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3h3b}\nb: Posterior predictive distribution with 10,000 replicates of 200 births (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\ndummy_data_3h3b <-  stats::rbinom(n = 1e4,\n                           size = 200,\n                           prob = samples_3h2b$p_grid_3h1b\n                           )\nutils::head(dummy_data_3h3b, 10)\n\nggplot2::ggplot() +\n  ggdist::stat_slabinterval(ggplot2::aes(x = dummy_data_3h3b),\n                            .width = c(0.66, 0.89), color = \"red\",\n                            slab_fill = \"grey\", slab_color = \"black\",\n                            density = \"bounded\") +\n  ggplot2::geom_vline(\n    ggplot2::aes(xintercept = n_boys), linetype = \"dashed\", color = \"red\") +\n  ggplot2::labs(x = \"Number of Boys\", y = \"Density\") +\n  ggplot2::theme_bw()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  [1] 105 124  98 102  94  96  98 107 101 108\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Create posterior predictive distribution with 10,000 replicates of 200 births (Tidyverse)](03-test_files/figure-html/fig-exercise-3h3b-1.png){#fig-exercise-3h3b width=672}\n:::\n:::\n\n\nI have used the graphic function from the {**ggdist**}\n resp. {**tidybayes**} package. I learned about this familiy of functions from the [solution by Jake Thompson](https://sr2-solutions.wjakethompson.com/bayesian-inference#chapter-3). \n \nThe model appears to fit well, because the observed value of 111 boys is in the middle of the <a class='glossary' title='An approach to assessing model fit. It is the distribution for future predicted data based on the data you have already seen. Measures of discrepancy between the estimated model and the data are constructed and their posterior predictive distribution compared to the discrepancy observed for the dataset. (CDS, p. 334)'>posterior predictive distribution</a> which has a mean of 110.7847 and a median of 111.\n\n::::\n:::::\n\n:::\n\n\n::::\n:::::\n\n***\n\n#### 3H4\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3H4: Now compare $10,000$ counts of boys from $100$ simulated first borns only to the number of boys in the first births, `birth1`. How does the model look in this light?\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n\n###### 3H4a\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3h4a}\na: Compare $10,000$ counts of boys from $100$ simulated first borns (Original)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\ndummy_data_3h4a <-  rbinom(n = 1e4,\n                           size = 100,\n                           prob = samples_3h2a)\n\nutils::head(dummy_data_3h4a, 10)\nmap_3h4a <- rethinking::chainmode(dummy_data_3h4a, adj = 1)\n\nrethinking::dens(dummy_data_3h4a, adj = 0.7)\nabline(v = sum(birth1), col = \"blue\")\nabline(v = map_3h4a, col = \"red\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  [1] 51 60 59 48 56 49 50 52 46 62\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Compare 10,000 counts of boys from 100 simulated first borns (Original)](03-test_files/figure-html/fig-exercise-3h4a-1.png){#fig-exercise-3h4a width=672}\n:::\n:::\n\n\nObserved first born boys: 51\n\nSimulation of first born boys:\n\n- Mean: 55.3639\n- Median: 55\n- Mode: 54.961\n\nWith the <a class='glossary' title='An approach to assessing model fit. It is the distribution for future predicted data based on the data you have already seen. Measures of discrepancy between the estimated model and the data are constructed and their posterior predictive distribution compared to the discrepancy observed for the dataset. (CDS, p. 334)'>posterior predictive distribution</a> for the first born boys the model does not appears to fit well, because the observed value of 51 boys (blue line) is not in the middle of the distribution.\n\n::::\n:::::\n\n\n###### 3H4b\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-3h4b}\nb: Compare $10,000$ counts of boys from $100$ simulated first borns (Tidyverse)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\ndummy_data_3h4b <-  stats::rbinom(n = 1e4,\n                           size = 100,\n                           prob = samples_3h2b$p_grid_3h1b\n                           )\nutils::head(dummy_data_3h4b, 10)\n\nmap_3h4b <- tidybayes::Mode(dummy_data_3h4b)\n\nggplot2::ggplot() +\n  ggdist::stat_slabinterval(ggplot2::aes(x = dummy_data_3h4b),\n                            .width = c(0.66, 0.89), color = \"red\",\n                            slab_fill = \"grey\", slab_color = \"black\",\n                            density = \"bounded\") +\n  ggplot2::geom_vline(\n    ggplot2::aes(xintercept = sum(birth1)), linetype = \"dashed\", color = \"blue\") +\n  ggplot2::geom_vline(\n    ggplot2::aes(xintercept = map_3h4b), linetype = \"dashed\", color = \"red\") +\n  ggplot2::labs(x = \"Number of 1st born boys\", y = \"Density\") +\n  ggplot2::theme_bw()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  [1] 51 60 59 48 56 49 50 52 46 62\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Compare 10,000 counts of boys from 100 simulated first borns (Tidyverse)](03-test_files/figure-html/fig-exercise-3h4b-1.png){#fig-exercise-3h4b width=672}\n:::\n:::\n\n\nObserved first born boys: 51\n\nSimulation of first born boys:\n\n- Mean: 55.3639\n- Median: 55\n- Mode: 55\n\nWith the <a class='glossary' title='An approach to assessing model fit. It is the distribution for future predicted data based on the data you have already seen. Measures of discrepancy between the estimated model and the data are constructed and their posterior predictive distribution compared to the discrepancy observed for the dataset. (CDS, p. 334)'>posterior predictive distribution</a> for the first born boys the model does not appears so well as for all boys in @cnj-3h3b, because the observed value of 51 boys (blue line) is not in the middle of the distribution. However, it does not appear to be a large discrepancy, as the observed value is still within the middle 66% interval.\n\n\n::::\n:::::\n\n\n:::\n\n\n::::\n:::::\n\n***\n\n#### 3H5\n\n:::::{.my-exercise}\n:::{.my-exercise-header}\nExercise 3H5: The model assumes that sex of first and second births are independent. To check this assumption, focus now on second births that followed female first borns. Compare 10,000 simulated counts of boys to only those second births that followed girls. To do this correctly, you need to count the number of first borns who were girls and simulate that many births, 10,000 times. Compare the counts of boys in your simulations to the actual observed count of boys following girls. How does the model look in this light? Any guesses what is going on in these data?\n:::\n::::{.my-exercise-container}\n\n::: {.panel-tabset}\n###### 3H5a\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_birth_3h5a <- as.data.frame(cbind(birth1, birth2))\ndf_birth_3h5a <- subset(df_birth_3h5a, birth1 == 0)\n\nn_1st_girls_3h5a <- 100 - sum(birth1)\nn_2nd_boys_3h5a <- sum(df_birth_3h5a$birth1) + sum(df_birth_3h5a$birth2)\n\np_grid_3h5a <- seq(from = 0,\n                   to = 1,\n                   length.out = 1e3)\nprior_3h5a <- rep(0.5, 1e3)\nlikelihood_3h5a <- dbinom(x = n_2nd_boys_3h5a,\n                              size = n_1st_girls_3h5a,\n                              prob = p_grid_3h5a)\nposterior_3h5a <-  prior_3h5a * likelihood_3h5a\nposterior_std_3h5a <- posterior_3h5a / sum(posterior_3h5a)\n\nset.seed(100)\ndummy_data_3h5a <-  rbinom(n = 1e4,\n                           size = n_1st_girls_3h5a,\n                           prob = samples_3h2a)\nrethinking::dens(dummy_data_3h5a, \n                 adj = 1,\n                 xlab = \"Number of 2nd born boys that follow a 1st born girl\")\nabline(v = n_2nd_boys_3h5a, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![Second births of boys that followed female first borns (Original)](03-test_files/figure-html/fig-exercise-3h5a-1.png){#fig-exercise-3h5a width=672}\n:::\n:::\n\nThe model predicts 27 2nd born boys that follow a 1st born girl. But we have observed 39 boys. Our model underestimates the number of 2nd born boys so that our assumption that births are independent must be challenged.\n\n###### 3H5b\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_1st_girls_3h5b <- 100 - sum(birth1)\nn_2nd_boys_3h5b <- sum(birth2[which(birth1 == 0)])\n\n\nset.seed(100)\ndummy_data_3h5b <- rbinom(1e4, size = n_1st_girls_3h5b, \n            prob = samples_3h2b$p_grid_3h1b)\n\nmap_3h5b <-  tidybayes::Mode(dummy_data_3h5b)\n\nggplot2::ggplot() +\n  ggdist::stat_slabinterval(ggplot2::aes(x = dummy_data_3h5b),\n                            .width = c(0.66, 0.89), color = \"red\",\n                            slab_fill = \"grey\", slab_color = \"black\",\n                            density = \"bounded\") +\n  ggplot2::geom_vline(\n    ggplot2::aes(xintercept = n_2nd_boys_3h5b), linetype = \"dashed\", color = \"blue\") +\n  ggplot2::geom_vline(\n    ggplot2::aes(xintercept = map_3h5b), linetype = \"dashed\", color = \"red\") +\n  ggplot2::labs(x = \"Number of 2nd born boys that follow a 1st born girl\", \n       y = \"Density\") +\n  ggplot2::theme_bw()\n```\n\n::: {.cell-output-display}\n![Second births of boys that followed female first borns (Tidyverse)](03-test_files/figure-html/fig-exercise-3h5b-1.png){#fig-exercise-3h5b width=672}\n:::\n:::\n\n\nThe model predicts 27 2nd born boys that follow a 1st born girl. But we have observed 39 boys. Our model underestimates the number of 2nd born boys so that our assumption that births are independent appears to be violated. We have generally more 2nd born boys (60% versus 51%) but especially more 2nd born boys when the first born was a girl (79.59%).\n\n\n:::\n\n\n::::\n:::::\n\n## Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nutils::sessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> R version 4.3.2 (2023-10-31)\n#> Platform: x86_64-apple-darwin20 (64-bit)\n#> Running under: macOS Sonoma 14.1.1\n#> \n#> Matrix products: default\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n#> \n#> locale:\n#> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n#> \n#> time zone: Europe/Vienna\n#> tzcode source: internal\n#> \n#> attached base packages:\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \n#> \n#> other attached packages:\n#> [1] glossary_1.0.0.9000\n#> \n#> loaded via a namespace (and not attached):\n#>  [1] ggdist_3.3.0         tensorA_0.36.2       tidyr_1.3.0         \n#>  [4] utf8_1.2.4           generics_0.1.3       xml2_1.3.5          \n#>  [7] shape_1.4.6          lattice_0.22-5       svUnit_1.0.6        \n#> [10] digest_0.6.33        magrittr_2.0.3       evaluate_0.23       \n#> [13] grid_4.3.2           mvtnorm_1.2-3        fastmap_1.1.1       \n#> [16] jsonlite_1.8.7       backports_1.4.1      purrr_1.0.2         \n#> [19] fansi_1.0.5          rethinking_2.40      scales_1.2.1        \n#> [22] rversions_2.1.2      abind_1.4-5          cli_3.6.1           \n#> [25] rlang_1.1.2          cmdstanr_0.5.3       commonmark_1.9.0    \n#> [28] munsell_0.5.0        withr_2.5.2          yaml_2.3.7          \n#> [31] tidybayes_3.0.6      tools_4.3.2          parallel_4.3.2      \n#> [34] checkmate_2.3.0      coda_0.19-4          dplyr_1.1.4         \n#> [37] colorspace_2.1-0     ggplot2_3.4.4        curl_5.1.0          \n#> [40] vctrs_0.6.4          posterior_1.5.0      R6_2.5.1            \n#> [43] matrixStats_1.1.0    lifecycle_1.0.4      htmlwidgets_1.6.2   \n#> [46] MASS_7.3-60          pkgconfig_2.0.3      pillar_1.9.0        \n#> [49] gtable_0.3.4         loo_2.6.0            glue_1.6.2          \n#> [52] xfun_0.41            tibble_3.2.1         tidyselect_1.2.0    \n#> [55] rstudioapi_0.15.0    knitr_1.45           farver_2.1.1        \n#> [58] htmltools_0.5.7      rmarkdown_2.25       labeling_0.4.3      \n#> [61] compiler_4.3.2       markdown_1.11        arrayhelpers_1.1-0  \n#> [64] distributional_0.3.2\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}